!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/lucky_dog/Code/Socket_Api/UDP/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
DEBUG	Log.hpp	/^#define DEBUG /;"	d
FATAL	Log.hpp	/^#define FATAL /;"	d
NOTICE	Log.hpp	/^#define NOTICE /;"	d
WARNING	Log.hpp	/^#define WARNING /;"	d
all	Makefile	/^all:udpServer udpClient$/;"	t
clean	Makefile	/^clean:$/;"	t
init	udpServer.cc	/^	void init()$/;"	f	class:udpServer	typeref:typename:void	file:
ip_	udpServer.cc	/^  std::string ip_;$/;"	m	class:udpServer	typeref:typename:std::string	file:
logMessage	Log.hpp	/^void logMessage(int level, const char *format, ...)$/;"	f	typeref:typename:void
log_level	Log.hpp	/^const char* log_level[] = {"", "DEBUG", "NOTICE", "WARNING", "FALSE"};$/;"	v	typeref:typename:const char * []
port_	udpServer.cc	/^  uint16_t port_;$/;"	m	class:udpServer	typeref:typename:uint16_t	file:
sockfd_	udpServer.cc	/^  int sockfd_;$/;"	m	class:udpServer	typeref:typename:int	file:
udpClient	Makefile	/^udpClient:udpClient.cc$/;"	t
udpServer	Makefile	/^udpServer:udpServer.cc$/;"	t
udpServer	udpServer.cc	/^  udpServer(int port, std::string ip = "")$/;"	f	class:udpServer	file:
udpServer	udpServer.cc	/^class udpServer {$/;"	c	file:
~udpServer	udpServer.cc	/^  ~udpServer() {$/;"	f	class:udpServer	file:
